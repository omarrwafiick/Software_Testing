// <auto-generated />
using System;
using BankApplicationApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankApplicationApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250510154039_config")]
    partial class config
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UnitTestingProj.Bank.Entities.Account", b =>
                {
                    b.Property<Guid>("AccountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("IsFrozen")
                        .HasColumnType("bit");

                    b.HasKey("AccountNumber");

                    b.ToTable("Accounts");

                    b.HasDiscriminator().HasValue("Account");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("UnitTestingProj.Bank.Entities.Transaction", b =>
                {
                    b.Property<Guid>("TransactionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountNumber")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TransactionNumber");

                    b.HasIndex("AccountNumber");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("UnitTestingProj.Bank.Entities.SavingAccount", b =>
                {
                    b.HasBaseType("UnitTestingProj.Bank.Entities.Account");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("SavingAccount");
                });

            modelBuilder.Entity("UnitTestingProj.Bank.Entities.Transaction", b =>
                {
                    b.HasOne("UnitTestingProj.Bank.Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("UnitTestingProj.Bank.Entities.Account", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
